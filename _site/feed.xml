<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>CodogenyDN: Field Notes</title>
		<description>Trying to make better simulations</description>
		<link>https://mathemaphysics.github.io</link>
		<atom:link href="https://mathemaphysics.github.io/feed.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Writing a Simple Molecular Dynamics Code in C++</title>
			<description>&lt;h1 id=&quot;the-basic-idea&quot;&gt;The Basic Idea&lt;/h1&gt;

&lt;p&gt;Writing even the most basic molecular dynamics code can
quickly grow into a massive endeavor. This is probably
because it inevitably involves the mixing of topics crossing
subject boundaries between basic code and data structures to
numerical integration of the equations of motion. So while it
could be a challenge for, I’ll do my best to keep thins as
simple as possible.&lt;/p&gt;

&lt;h1 id=&quot;classes-and-data-structures&quot;&gt;Classes and Data Structures&lt;/h1&gt;

</description>
			<pubDate>Sun, 14 Apr 2019 07:40:41 -0500</pubDate>
			<link>https://mathemaphysics.github.io//physics/computation/chemistry/2019/04/14/molecular-dynamics-code.html</link>
			<guid isPermaLink="true">https://mathemaphysics.github.io//physics/computation/chemistry/2019/04/14/molecular-dynamics-code.html</guid>
		</item>
		
		<item>
			<title>Neural Ordinary Differential Equations</title>
			<description>&lt;h1 id=&quot;neural-ordinary-differential-equations&quot;&gt;Neural Ordinary Differential Equations&lt;/h1&gt;

&lt;p&gt;Neural networks have been around for a long time. But the era of neural
network computing has only recently become a big deal as a result of
hardware which can perform the training process fast enough to be useful
in real problems. The general structure of a deep architecture (and RBMs,
restricted Boltzmann machines) is a sequence of layers consisting of nodes
or neurons which individually connect to every node in both adjacent layers
and to no other nodes in their own layers or any other non-adjacent layer.
If we were to write down a mathematical structure of such a thing, it would
look like the following.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x^{k+1}_i = W^k_{ij} x^k_j + b_j&lt;/script&gt;

&lt;p&gt;This is the ordinary form of a single layer of neural network in the context
of deep learning. But there’s a more interesting generalization of the neural
network layer which might just make things work more efficiently in the future.
This is the neural ordinary differential equation, or NODE &lt;a href=&quot;#Chen2018&quot;&gt;&lt;span style=&quot;vertical-align: super&quot;&gt;1&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;Chen2018&quot;&gt;&lt;span style=&quot;vertical-align: super&quot;&gt;1&lt;/span&gt; R.T.Q. Chen, Y. Rubanova, J. Bettencourt, and D. Duvenaud, (2018).&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;

</description>
			<pubDate>Tue, 29 Jan 2019 17:32:00 -0600</pubDate>
			<link>https://mathemaphysics.github.io//physics/simulation/2019/01/29/neural-ord-diff-eqs.html</link>
			<guid isPermaLink="true">https://mathemaphysics.github.io//physics/simulation/2019/01/29/neural-ord-diff-eqs.html</guid>
		</item>
		
		<item>
			<title>Calculating Propensity for Motion</title>
			<description>&lt;p&gt;There have been some more or less recent journal articles written by Asaph
Widmer-Cooper et al. &lt;a href=&quot;#Tokuda2005&quot;&gt;&lt;span style=&quot;vertical-align: super&quot;&gt;1&lt;/span&gt;&lt;/a&gt; using the topic of using
the dynamic propensity to give insight into the dynamics of glassy liquids. The
topic came up in my line of work as a result of its potential applications in
understanding the relationship between molecular structure and bulk viscosity.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;Tokuda2005&quot;&gt;&lt;span style=&quot;vertical-align: super&quot;&gt;1&lt;/span&gt; H. Tokuda, K. Hayamizu, K. Ishii, M.A.B.H. Susan, and M. Watanabe, J. Phys. Chem. B &lt;b&gt;109&lt;/b&gt;, 6103 (2005).&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;

</description>
			<pubDate>Thu, 24 Jan 2019 21:23:49 -0600</pubDate>
			<link>https://mathemaphysics.github.io//physics/simulation/2019/01/24/computing-propensity.html</link>
			<guid isPermaLink="true">https://mathemaphysics.github.io//physics/simulation/2019/01/24/computing-propensity.html</guid>
		</item>
		
		<item>
			<title>Welcome to CodogenyDN</title>
			<description>&lt;h1 id=&quot;why-im-here&quot;&gt;Why I’m Here&lt;/h1&gt;

&lt;p&gt;Welcome to my new attempt at a functional website. My interests are pretty wide, so you’ll have to forgive me if I seem to jump from topic to topic. On the other hand, you might also discover that fairly disparate topics are actually much more closely related.&lt;/p&gt;

&lt;h1 id=&quot;topics-i-follow&quot;&gt;Topics I Follow&lt;/h1&gt;

&lt;p&gt;If you look through my papers, you’ll probably find mostly journal articles related to room-temperature ionic liquids (abbreviated RTILs). Specifically, you’ll find articles which make use of mostly classical mechanics to simulate them.&lt;/p&gt;

&lt;p&gt;Here’s an example of some code in python. Hopefully it will show up correctly. Also I need to make sure your facilities are capable of rendering equations correctly.&lt;/p&gt;

&lt;h1 id=&quot;my-repositories&quot;&gt;My Repositories&lt;/h1&gt;

&lt;p&gt;I’ve built a number of repositories over time. Here are a couple to take a look at.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mathemaphysics/math&quot;&gt;Math Repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mathemaphysics/neural&quot;&gt;RBN Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
			<pubDate>Mon, 21 Jan 2019 05:56:49 -0600</pubDate>
			<link>https://mathemaphysics.github.io//thermodynamics/physics/deeplearn/2019/01/21/ionic-liquid-glassiness.html</link>
			<guid isPermaLink="true">https://mathemaphysics.github.io//thermodynamics/physics/deeplearn/2019/01/21/ionic-liquid-glassiness.html</guid>
		</item>
		
		<item>
			<title>Welcome to Jekyll!</title>
			<description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
			<pubDate>Sun, 20 Jan 2019 09:15:25 -0600</pubDate>
			<link>https://mathemaphysics.github.io//jekyll/update/2019/01/20/welcome-to-jekyll.html</link>
			<guid isPermaLink="true">https://mathemaphysics.github.io//jekyll/update/2019/01/20/welcome-to-jekyll.html</guid>
		</item>
		
	</channel>
</rss>
